<!--header"-->
[[template "header" .]]
<!--header"-->


<main class="main-content mt-1 border-radius-lg">
    <!--navar"-->
    [[template "top_navar" .]]
    <!--navar"-->

    <script type="text/javascript">

        window.addEventListener('load', function () {
            loadHomeData()
        })

        function loadHomeData() {
            RequestGETApi("/api/SysHomeData").then(function (data) {
                if (data.resultCode === "00") {
                    return data.resultData
                }
            }).then(function (data) {
                let arr = []
                arr.push(getPerData(data.userData, "전체 사용자"))
                arr.push(getPerData(data.companyData, "장부수"))
                arr.push(getPerData(data.storeData, "가맹점수"))

                let mArr = getPerMData(data.previousMonthData, data.currentMonthData, "월누적금액/건수", "금일누적금액/건수")
                arr.push(mArr[0])
                arr.push(mArr[1])
                getPanel(arr)
            })

            RequestGETApi("/api/SysHomeContentsData").then(function (data) {
                return (data.resultCode === "00")? data.resultData : null
            }).then(function (data) {
                drawChart(data)
                document.getElementById('grpRank').innerHTML = rankHtml(data.companyAmtRank)
                document.getElementById('storeRank').innerHTML = rankHtml(data.storeAmtRank)
            })
        }

        function drawChart(data) {
            let ctx2 = document.getElementById("chart-line").getContext("2d");

            let gradientStroke1 = ctx2.createLinearGradient(0, 230, 0, 50);

            gradientStroke1.addColorStop(1, 'rgba(193,160,255,0.2)');
            gradientStroke1.addColorStop(0.2, 'rgba(206,181,255,0.0)');
            gradientStroke1.addColorStop(0, 'rgba(203,12,159,0)'); //purple colors

            let gradientStroke2 = ctx2.createLinearGradient(0, 230, 0, 50);

            gradientStroke2.addColorStop(1, 'rgba(204,204,204,0.2)');
            gradientStroke2.addColorStop(0.2, 'rgba(72,72,176,0.0)');
            gradientStroke2.addColorStop(0, 'rgba(20,23,39,0)'); //purple colors

            let yesterday = getDataArr(data.yesterday)
            let today = getDataArr(data.today)

            let max = 0

            if (today[3] > yesterday[3]) {
                max = today[3]
            } else {
                max = yesterday[3]
            }

            new Chart(ctx2, {
                type: "line",
                data: {
                    //이곳에 시간별
                    labels: today[0],
                    datasets: [
                        {//보라색 선 라벨 오늘
                            label: "금일 건수",
                            tension: 0.4,
                            pointRadius: 0,
                            borderColor: "#a076f1",
                            borderWidth: 3,
                            backgroundColor: gradientStroke1,
                            //보라선 각 날짜별 데이터
                            data: today[2],
                            maxBarThickness: 6
                        },
                        {//검은색 선 라벨 어제
                            label: "전일 건수",
                            tension: 0.4,
                            pointRadius: 0,
                            borderColor: "#cecece",
                            borderWidth: 3,
                            backgroundColor: gradientStroke2,
                            //검은선 각 날짜별 데이터
                            data: yesterday[2],
                            maxBarThickness: 6
                        }

                    ],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    legend: {
                        display: false,
                    },
                    tooltips: {
                        enabled: true,
                        mode: "index",
                        intersect: false,
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                borderDash: [2],
                                borderDashOffset: [2],
                                color: '#dee2e6',
                                zeroLineColor: '#dee2e6',
                                zeroLineWidth: 1,
                                zeroLineBorderDash: [2],
                                drawBorder: false,
                            },
                            ticks: {
                                suggestedMin: 0,
                                suggestedMax: max,
                                beginAtZero: true,
                                padding: 10,
                                fontSize: 11,
                                fontColor: '#cecece',
                                lineHeight: 3,
                                fontStyle: 'normal',
                                fontFamily: "Open Sans",
                            },
                        },],
                        xAxes: [{
                            gridLines: {
                                zeroLineColor: 'rgba(0,0,0,0)',
                                display: false,
                            },
                            ticks: {
                                padding: 10,
                                fontSize: 11,
                                fontColor: '#adb5bd',
                                lineHeight: 3,
                                fontStyle: 'normal',
                                fontFamily: "Open Sans",
                            },
                        },],
                    },
                },
            });
        }

        function getDataArr(object) {
            let nameArr = []
            let cntArr = []
            let amtArr = []
            let max = 0
            for (const objectElement of object) {
                nameArr.push(objectElement.ORDER_HOUR + " 시")
                cntArr.push(objectElement.HOUR_CNT)
                amtArr.push(objectElement.HOUR_AMT)
                if (max < objectElement.HOUR_CNT) {
                    max = objectElement.HOUR_CNT
                }
            }
            return [nameArr, amtArr, cntArr, max]
        }

        function getPerData(object, name) {
            let total = object.TOT_CNT
            let week = object.WEEK_CNT

            let per = getPer(total, week)

            return [total, per.toFixed(1), name]
        }

        function getPerMData(pre, cur, name1, name2) {

            let perM = getPer(pre.MONTH_AMT, cur.MONTH_AMT)
            let perD = getPer(pre.DAY_AMT, cur.DAY_AMT)

            let arr1 = [cur.MONTH_AMT + " / " + cur.MONTH_CNT, (perM - 100).toFixed(1), name1]
            let arr2 = [cur.DAY_AMT + " / " + cur.DAY_CNT, (perD - 100).toFixed(1), name2]
            return [arr1, arr2]
        }

        function getPer(total, cur) {
            if (total === "0") {
                return 100
            }
            return cur * 100 / total
        }

        function getPanel(data) {

            for (let i = 0; i < data.length; i++) {
                let html = ""
                html += "<p class=\"text-sm mb-0 text-capitalize font-weight-bold\">" + data[i][2] + "</p>"
                html += "<h6 class=\"font-weight-bolder mb-0\">" + numberWithCommas(data[i][0])
                if (data[i][1] < 0) {
                    html += "<span class=\"text-danger ms-2 text-sm font-weight-bolder\">" + data[i][1] + "%</span>"
                } else {
                    html += "<span class=\"text-success ms-2 text-sm font-weight-bolder\">" + data[i][1] + "%</span>"
                }
                document.getElementById("headPanel" + (i + 1)).innerHTML = html
            }

        }

        function getRankData(data) {
            let arr = []
            let max = 0

            for (const dataElement of data) {
                if (dataElement.ORDER_AMT * 1 > max) {
                    max = dataElement.ORDER_AMT
                }
            }

            for (const dataElement of data) {
                arr.push([dataElement.NM, dataElement.ORDER_AMT, getPer(max, dataElement.ORDER_AMT).toFixed(0) + "%"])
            }
            return arr
        }

        function rankHtml(data) {
            let rankData = getRankData(data)
            let html = ""
            let str = ""
            if (rankData.length === 0) {
                str = "데이터가 없습니다"
            }
            document.getElementById("listBlink1").innerText = str
            document.getElementById("listBlink2").innerText = str

            for (let i = 0; i < rankData.length; i++) {
                html += "<tr>"
                html += "     <td>"
                html += "         <div class=\"d-flex px-2 py-1\">"
                html += "             <div class=\"d-flex flex-column justify-content-center\">"
                html += "                 <h6 class=\"mb-0 text-sm\">" + rankData[i][0] + "</h6>"
                html += "             </div>"
                html += "         </div>"
                html += "     </td>"
                html += "     <td class=\"align-middle\">"
                html += "         <div class=\"progress-wrapper w-75 mx-auto\">"
                html += "             <div class=\"progress-info\">"
                html += "                 <div class=\"progress-percentage\">"
                html += "                     <span class=\"text-xs font-weight-bold\">" + numberWithCommas(rankData[i][1]) + "원</span>"
                html += "                 </div>"
                html += "             </div>"
                html += "             <div class=\"progress\">"
                html += "                 <div class=\"progress-bar bg-primary\" role=\"progressbar\" style=\"width:" + rankData[i][2] + ";\"></div>"
                html += "             </div>"
                html += "         </div>"
                html += "     </td>"
                html += " </tr>"
            }
            return html
        }

    </script>

    <div class="container-fluid py-4">

        <!--해상도별 퍼센테이지-->
        <div class="row" >

            <div class="col-xl-2 col-sm-6 mb-xl-0 mb-4">
                <div class="card">
                    <div class="card-body p-3 row">
                        <div class="col-8 numbers" id="headPanel1">

                        </div>

                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-danger shadow text-center border-radius-md">
                                <i class="ni ni-money-coins text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-xl-2 col-sm-6 mb-xl-0 mb-4">
                <div class="card">
                    <div class="card-body p-3 row">
                        <div class="col-8 numbers" id="headPanel2">

                        </div>

                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md">
                                <i class="ni ni-world text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-xl-2 col-sm-6 mb-xl-0 mb-4">
                <div class="card">
                    <div class="card-body p-3 row">
                        <div class="col-8 numbers" id="headPanel3">

                        </div>

                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-success shadow text-center border-radius-md">
                                <i class="ni ni-paper-diploma text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
                <div class="card">
                    <div class="card-body p-3 row">
                        <div class="col-8 numbers" id="headPanel4">

                        </div>

                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-secondary shadow text-center border-radius-md">
                                <i class="ni ni-cart text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
                <div class="card">
                    <div class="card-body p-3 row">
                        <div class="col-8 numbers" id="headPanel5">

                        </div>

                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                                <i class="ni ni-cart text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <!--그래프-->
        <div class="row mt-4">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h6>시간별 사용현황(건수)</h6>
                    </div>
                    <div class="card-body p-3">
                        <div class="chart">
                            <canvas id="chart-line" class="chart-canvas" height="300px"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="row my-4">
            <div class="col-lg-6 col-md-6 mb-md-0 mb-4">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="row">
                            <div class="col-lg-6 col-7">
                                <h6>가맹점 매출액 순위</h6>
                            </div>
                        </div>
                    </div>
                    <div class="card-body px-0 pb-2">
                        <div class="table-responsive">
                            <table class="table align-items-center mb-0">
                                <tbody id="storeRank">

                                </tbody>
                            </table>
                            <p class="text-center text-s font-weight-bold mb-3 mt-2" id="listBlink1"></p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-md-6 mb-md-0 mb-4">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="row">
                            <div class="col-lg-6 col-7">
                                <h6>장부 구매액 순위</h6>
                            </div>
                        </div>
                    </div>
                    <div class="card-body px-0 pb-2">
                        <div class="table-responsive">
                            <table class="table align-items-center mb-0">

                                <tbody id="grpRank">

                                </tbody>
                            </table>
                            <p class="text-center text-s font-weight-bold mb-3 mt-2" id="listBlink2"></p>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>
</main>

<!--   Core JS Files   -->
<script src="/public/tm/js/plugins/chartjs.min.js"></script>
<script src="/public/tm/js/plugins/Chart.extension.js"></script>
<script type="text/javascript">


</script>
<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>

<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
<!--footer"-->
[[template "footer" .]]
<!--footer"-->
